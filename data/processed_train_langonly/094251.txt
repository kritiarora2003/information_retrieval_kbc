[1]
Reed, J.
: This issue for decision in this case is a narrow but important one: is a computer program when embodied in a silicon chip in the computer a subject matter in which copyright exists? Many of the facts are not greatly in dispute. The plaintiff holds a registered copyright in two computer programs: Autostart ROM, registration number 319465, October 8, 1982, and Applesoft, registration number 319468, October 8, 1982.
[2]
The original handwritten copies of these programs are not now available. (The conclusion that the two programs originally existed in a hand written form is drawn from the evidence of Professor Graham as to the general practice followed by programmers, not from any first hand evidence to this effect). They were originally written in assembly language. A section of one of the programs as originally written reads as follows:
COLOUR
The two programs in question were created for the purpose of being encoded on chips (silicon semi-conductors) to be mounted in the plaintiffs' Apple II + Computer, to serve as the operating instructions for that computer. While only eight lines of one of the programs have been reproduced above, each of the programs in issue contains more than a thousand such lines of instruction.
[3]
There is no doubt that the creation of a computer program requires a great deal of time, effort, and ingenuity. Professor Graham, an acknowledged expert in computer programming, gave evidence that it would take four months for him, with the help of two students, to write programs to serve the same purpose as those in issue in this case.
[4]
There is no doubt that computer programs are highly individualistic in nature and contain a form of expression personal to the individual programmer. No two programmers would ever write a program in exactly the same way (except perhaps in the case of the most simple program). Even the same programmer, after writing a program and leaving it for some time, would not write the program the same way on a second occasion. The sequence of instructions would most certainly be different. The possibility of two programmers creating identical programs, without copying was compared by the defendants' expert witness to the likelihood of a monkey sitting at a typewriter producing Shakespeare.
[5]
The defendants' computers (more will be said about the individual defendants later) which were sold under the names of "Microcom" and "Mackintosh", contain chips which have encoded in them the plaintiffs' programs Autostart ROM and Applesoft. In the Microcom chips, out of a total of 12,288 bytes (a byte can be thought of as comprising two characters eg: AO, 2F or 27), 12,261 were absolutely identical in content and location to the corresponding Apple II + chips. In the Mackintosh chips, out of a total of 12,288 bytes, 12,277 were absolutely identical in content and location to the corresponding Apple II + chips. Eight of the differences in each case account for the names "Microcom" and "Mac-III" being used instead of "Apple II". When the respective computers are first turned on those names and displayed on the screen in the place of the name "Apple II".
Programs - Languages
[6]
A computer language, of which there are many, is a code for writing a program. A language is said to be "higher" or "lower" depending upon the ease with which it can be read. A high level language, has symbols and rules that correspond closely enough to ordinary mathematics and English (or other common language) that it may be read and understood with relative ease. Examples are languages such as BASIC, COBOL, Pascal and FORTRAN.
[7]
A second level of language, which can be referred to as an intermediate level, consists of mnemonics which correspond more explicitly to the operations the computer must perform. For example, in the excerpt set out above, LDY stands for "load index Y with memory", and STA stands for "store accumulator in memory". This intermediate level is referred to as assembly language.
[8]
A third level of language, the lowest, is sometimes referred to as machine language or object code. There are two versions of machine language relevant for the purposes of this case: a system of hexadecimal notation and a system of binary notation. I do not think it necessary to describe the two in detail except to say that hexadecimal notation is based on a number system having a base sixteen, while binary notation is based on a number system having a base two. The hexadecimal system of notation is merely a shorthand way of writing the binary code. It is used because it uses less characters and is therefore less cumbersome than binary.
[9]
The programs in issue were written in 6502 assembly language because they were written for use with a 6502 microprocessor. The microprocessor, also called the central processing unit (CPU) of the computer, is one of the key chips therein. There are several different kinds of such chips (a dozen or more) commercially available and the particular assembly language in which a program is written will depend on the type of microprocessor chip which has been chosen for use in the computer. This follows from the fact that the different microprocessors contain circuitry particular to each and consequently the functions each perform and the codes to which each respond, in order to perform those functions, differ.
[10]
The two programs, after having been written in assembly language (i.e. the source code in this case) were converted into machine language, or object code, in its hexadecimal form. The conversion was done by means of a computer program (called assembler) but there is no reason it could not have been done manually apart from the tedium of such a process. Indeed there is no reason the programs could not originally have been written in hexadecimal code, rather than in assembly language, except for the cumbersomeness and tediousness of doing so.
[11]
The hexadecimal form of the machine language for the excerpt set out above reads as follows:
The Autostart ROM program was published by the plaintiffs in both its assembly code form and hexadecimal code form in the "Apple II Reference Manual", a book distributed and sold to the public. Both Autostart ROM and Applesoft, were registered and filed in the United States copyright office in their hexadecimal form. In the Canadian copyright office the programs are registered by reference to their titles only. The plaintiffs' claim is for copyright in the original assembly code versions; the hexadecimal versions are claimed to be translations of the original work.
[13]
As noted above, a program written in machine language (or object code) can be written in hexadecimal notation or binary notation. Binary is a number system using only two digits 1 and 0. (While decimal 1 is also binary 1, decimal number 2 is binary 10, and decimal number 3 is binary 11; decimal 4 is 100, and decimal 43 is 101011. It is clear, then, that the binary number system employs the same positional notation as the decimal system except that as one reads each digit from right to left it is not progressively higher powers of 10 which determine the value of the digits but progressively higher powers of 2). Thus a program written in binary notation would consist of a string of ones and zeros. For example, the assembly code instruction LDY set out above, which became in hexadecimal notation A0, would in binary become 1010 0000. Numbers and letters of the alphabet can also be expressed by means of binary code as can the various symbols (e.g. punctuation marks) on a typewriter keyboard. For example the letter A might be represented as 01000001. (A standard code has been developed, called ASCII (an acronym for the American Standard Code for Information Interchange) whereby a unique 8-bit binary number is assigned for each upper and lower case letter, numeral, punctuation symbol and other character of the typewriter keyboard).
[14]
Each digit of binary code (be it a 1 or 0) in computer terminology is called a "bit". A string of eight digits is called a "byte". The Apple II reference manual defines a byte as a basic unit of measure of a computer's memory. This reflects the fact that microprocessors commonly process a string of 8 bits simultaneously. The 6502 CPU has an 8 bit data bus - see page 90 of the Apple II Reference Manual (Exhibit D-9).
[15]
In fact, it is the binary form of machine language which the computer "understands". The string of ones and zeros can be represented in the computer as the two states "electrically on" and "electrically off' (or high and low voltage levels). I will use the term machine code to refer to the program in its electrical code form and the terms machine language or object code to refer to the program in a written form.
From Written Text to ROM
[16]
In order for a program to be used by a computer it must, then, be converted into a series of "electrically on" and "electrically off" states, an electrical code which corresponds to the binary notation of the program. This can be accomplished in a variety of ways since a program once written can be embodied in a variety of material forms. All that is required is that the material be capable of reflecting two discrete states in order to correspond to the ones and zeros of the binary code.
[17]
The program could be encoded on paper tape by punching holes therein, in an appropriate pattern, so that the presence of a hole represents a one and the absence of a hole represents a zero. The tape could then be "read" by means of a light souce and the appropriate signals sent to the internal memory of the computer. I understand this to have been an early form of computer technology. Alternately, a magnetic tape might be used with the presence of a magnetic charge representing a one and the absence of a charge representing a zero.
[18]
Paper tapes and punch cards, as well as magnetic tapes are all known as external memory, because the program is "stored" in a physical device external to the computer. It is the floppy disc which is the most familiar form of external memory to people today. Technologically it is similar to the magnetic tape in that charged and uncharged areas (of microscopic size) correspond to the ones and zeros of binary code but it is easier to read because of its non-linear configuration. Thus, a person wishing to play a video game, or prepare a tax return or write a text chooses the appropriate diskette (floppy disk) and places that disk into the slot of the disk drive connected to the computer. The program on the disk is then "loaded", that is, copied into the internal memory of the computer.
[19]
The evidence was that conceptually the internal memory of the computer could be thought of as a series of mailboxes (pigeon holes) arranged in a rectangular array into which information in the form of bytes is stored (eight ones and zeros per box). At the electrical level, the computer memory is an integrated circuit which is capable of holding, because of its circuitry, a pattern of high and low voltage states. That electrical code will correspond on a one to one basis with the program as written in binary notation:
"So you can imagine 8 transistors, then, being all arranged in a row, and those transistors somehow would be employed in the construction of the device to exhibit the information that is to be stored. ..."
The internal memory of the computer is of two types, RAM and ROM. RAM (random access memory) is volatile. When the power is turned off whatever has been placed in RAM is erased. Thus, for example, a program loaded from a floppy disk into the internal RAM memory of a computer for the purpose of preparing a tax return would disappear from the computer's internal memory when the power was turned off, as would any income figures or tax calculations which might have become part thereof by using the program. ROM (read only memory), on the other hand, is permanent in nature and whatever is stored therein is not erased when the power is turned off. This follows from the fact that while the eight transistors in RAM have the property of switching on or off (ie: of representing either a one or a zero depending upon what program or data is loaded into it), the transistors of the memory cells of the ROM chips have been "blown" and thus permanently structured to carry only one set of instructions. Thus ROM can be "read" only; it cannot have information written into it as is the case with RAM.
[21]
A person chooses to have a program stored  <FRAGMENT_SUPPRESSED>  rather than RAM if it is a program which is frequently used. In this regard a distinction is made between what are called application programs and operating systems programs. Application programs are designed for a specific task, such as the playing of a video game, preparation of a tax return, or the writing of a text. Operating system programs are designed primarily to facilitate the operation of application programs and perform tasks common to any application program. Without them each application program would need to duplicate their functions.
[22]
Autostart ROM and Applesoft are operating system programs. Autostart ROM consists of instructions to initiate registers; it allows the user of the computer to load his or her own program into memory and cause it to be executed; it contains instructions, for example, that would be required to copy a part of memory onto a cassette. It also contains the instructions the computer needs to operate when it is first turned on, what are called "bootstrap" instructions. Applesoft is an interpreter program which enables a user to communicate with the computer in a high level language (BASIC). The Applesoft program translates this into machine code for use by the computer.
[23]
The distinction between an operating systems program and an application program is not a rigid one (a single program may answer both descriptions). Both types of programs can be written in the same code eg: a higher level language, or an intermediate level language, (assembly language), or some other language, although as with all programming the practice is to choose the code which is most "expressive" for the purpose of the program being written.
[24]
When a programmer or a computer manufacturer wishes to have a program embodied  <FRAGMENT_SUPPRESSED> , he or she sends a copy of the program in machine language (hexadecimal or binary) to a ROM manufacturer. The manufacturer of the Apple II ROMs also required that it be submitted in at least two different input media (eg: punched paper tape and a floppy disk) to facilitate verification. A pattern is then etched into the memory cells of the chip by a photo-lithographic process which it is not necessary to describe in detail for the purpose of these reasons. (One or more masks, depending on the chip, is used in the process. These are made of glass with a pattern of opaque and transparent areas corresponding on a one to one basis with the pattern of the machine code). The pattern created in the ROM chip corresponds to the binary pattern of the written program. Thus, the chip is structured so that it can replicate the program or part thereof in its electrical code form as required whenever an electric current is passed through the appropriate "address" of the ROM. (The address is the location (particular pigeonhole) of the memory from which an instruction or data is sought. The Apple reference manual defines address as "the particular number associated with each memory location. On the Apple, an address is a number between 0 and 65535 (or $0000 and $FFFF hexadecimal)").
Computers - Electronic Logic
[25]
A computer is a complex system of interconnected, integrated electrical circuits. It consists of a circuit board ("mother board") into which have been pinned or soldered a number of electronic components. (The Apple II reference manual describes the printed circuit board as:
"A sheet of fiberglass or epoxy onto which a thin layer of metal has been applied, then etched away to form traces. Electronic components can then be attached to the board with molten solder, and they can exchange electronic signals via the etched traces on the board ...")
The components communicate with one another by means of the traces (sometimes called buses, sometimes called wires) etched into the board. The main electronic components of the system are the input/output devices, the microprocessor (CPU) and the memory. The input/output devices connect, respectively, to whatever is being used to feed information into the computer (e.g.: a keyboard, magnetic tape, punch cards) and to whatever is being used to display or otherwise make use of the information which results from the computer's functioning (e.g.: the screen of a monitor).
[26]
The most important of the electronic components (integrated circuits) are the CPR and memory chips. These are pieces of silicon each of which is almost one quarter inch square into which have been etched electronic circuits designed to accomplish specific tasks. A single integrated circuit can contain from ten to ten thousand discrete electronic elements. As mounted in the computer these chips are housed in a somewhat larger plastic packaging to enable connections to be made between the several components.
[27]
The circuits consist of interconnected transistors. The transistors are built in and of the silicon by a process of (doping) adding impurities to certain areas of the chip so that the conductivity of the chip is modified from one area to another. Before the development of these integrated silicon chip circuits, individual transistors as discrete components were used, and before that in the early days of computers, vacuum tubes. Whatever the technology, the significant factor is that the transistors of a digital circuit are operated as switches that generally have only two states: "electrically on" and "electrically off". Because digital circuits operate by reference to only two values, they can be built to carry out arithmetic and logic functions based on binary arithmetic and Boolean algebra. (W.C. Holton, "The Large Scale Integration of Microelectronic Circuits", Microelectronics, Scientific American, September 1977, at pp. 26 - 28, (exhibit D-10):
"The logic system employed by digital computers was devised by the British mathematician George Boole almost a century before the first electronic computer was built. The Bollean algebra provides rigorous procedures for deciding whether a statement is true or false provided only that the statement can be expressed in terms of variables that have just two possible values. ...")
[28]
It is the CPU which carries out the arithmetic and logic functions (eg: addition, subtraction, comparison of data presented as two fields of numbers). As I understand it the performing of all such functions can be reduced to three basic logic elements called "not", "and" and "or". The electronic representation of these functions are called logic gates. [Holton at page 29 states]:
"In a computer the symbols of Boolean algebra are reduced to the hardware of transistors and other electronic devices. In a microcomputer this transformation is particularly elegant because the symbolic logic is mapped almost directly onto the surface of a silicon chip."
The logic gates are not only the fundamental elements of the arithmetic and logic units lodged in the CPU but they also form the basis of the circuitry used in the memory chips to store information (Holton, p. 30).
[29]
From all the technical evidence given I think it is only necessary to note that the results of the arithmetic and logic functions of the CPU can always be expressed as a series of ones and zeros, and that the circuitry which performs such operations is designed to operate on information (instructions and data) provided to it in binary form as a sequence of ones and zeros, that is, as an electrical code.
Hardware and Software Perspectives
[30]
The plaintiffs' evidence focussed on the operation of a computer from a programmer's point of view. The plaintiffs' expert witnesses, except for one, were all software experts. The defendants' expert evidence, on the other hand, focussed on the operation of a computer from a hardware point of view.
[31]
The plaintiffs' witnesses described the computer in terms of its function of processing and storing information. The memory hierarchy was explained to be a storage device for information, that is for both instructions (programs) and data processed by those instructions. The information thus stored was described as being retrieved (fetched) by the CPU. The CPU was described as controlling the operation of the entire system by fetching instructions and data from the memory and processing the data in accordance with the instructions.
[32]
A crucial aspect of a computer's functioning was explained as being the fact that both programs (instructions) and data are described in terms of the same system of notation, and thus are in a sense indistinguishable in the memory of the computer. What is more, the instructions can be treated as data by the CPU and therefore changed as execution of the program proceeds. [Holton at pages 31 and 32 states]:
"The concept of a stored program was introduced in 1833 by Charles Babbage as a feature of a "calculating engine" he proposed to build. ... The modern form of the stored program was introduced by John Von Neumann, who added a significant refinement. He specified that both the data to be processed and the instructions for processing them be written in the same notation. By this contrivance instructions can be manipulated by the machine as if they were data. A program can therefore alter another program or even itself."
[33]
The defendants' evidence on the other hand focussed on the functioning of the machine as a complex system of integrated electrical circuits. I quote from the cross-examination of Professor Graham to illustrate this focus. Counsel asked:
"Now, what I am trying to do here is to try to get away from the jargon, ... and try to deal with the physical phenomena ...
rather than use the words of art that the people generally use
to describe what is happening ... can I say that when this thing starts up, I flick on the switch and the clock sends a pulse of electricity into a certain part of the central processor unit circuitry, and that circuitry is designed to immediately cause that CPU to transmit that signal along to the ROM? Is that correct?
A. That is correct.
Q. And, because of the switch settings of the transistors that are in the ROM, that signal is then transmitted...
... let us say that on the first clock pulse the ROM receives an electrical signal and that stimulates the wires in there in such a way that those transistor switches that are on, and those transistor switches that are off, will in combination cause an electric signal to appear somewhere else, which on the execute cycle may be taken back to the CPU?
A. Yes. It is probably on that data bus, that I mentioned yesterday."
(Transcript Vol. II, p. 25 and following)
Consonant with this emphasis on the computer as an electrical machine, counsel for the defendants invited me to characterize a program as merely specifications for a machine part. I do not accept that characterization. It is clear that a programmer writes a program, he is thinking of instructions to the computer in terms of moving information between certain registers and of performing certain operations thereon. In this sense it is not remiss to think of a program as being an instruction manual, but addressed to the CPU of a computer, rather than to another human being. A programmer writing a program, such as those in issue in this case, is not thinking about voltage levels, or logic gates, or conditioning the circuitry of the CPU, or of providing specifications to the manufacturer of the ROM chip for the construction of that chip. Indeed the medium in which the program eventually finds itself (punch cards, magnetic tape or silicon chip) is not of concern to him. He is thinking of the computer as having a certain number of registers and of being able to perform a certain number of limited operations and of moving information between those locations. A review of some of the functions and codes which the 6502 microprocessor can perform make that clear:
Load Accumulator with Memory
Load Index X with Memory
Load Index Y with Memory
Shift right one bit (memory or accumulator
'OR' memory with accumulator
Push accumulator in stack
Push processor status in stack
Return from interrupt
Return from sub-routine
Store index X in memory
Store index Y in memory
[35]
I make reference also, because of the clarity of its expression, to an article written by the defendants' expert witness, Professor Burkowski.
"The machine does it work by following the directions of a program which is comprised of machine instructions.
Each instruction during its execution will in some precise well-defined way effect the flow of information between locations or will change the information content of a particular specified location
. Hence the job of programming is the act of expressing a task in terms of instructions which alter and move information in the locations. To this end, we find it convenient to imagine the instructions as belonging to the following classes of machine instructions:
These instructions cause the transfer of information between memory and a register or from one register to another register, etc., for example 'load accumulator' or 'store accumulator'.
"2. Arithmetic/Logical Instructions
These instructions modify data in locations according to arithmetic or logical rules, for example, 'add', 'subtract', 'and', 'or', 'rotate', 'clear', etc.
"3. Program Flow Control Instructions
These instructions alter the contents of the program counter (a 16 bit location holding the address of the next instruction to be executed) and hence after normal sequential execution of instructions in the memory, for example, 'branch', 'jump to subroutine', etc.
This class of instructions includes all other instructions such as flag manipulators which affect the condition code register (status register), for example, 'compare', 'test byte', etc.
Since any one instruction performs on the data an operation which is really quite simple, it is necessary that the programmer express a task of any complexity as a rather long sequence of instructions."
As noted above, Professor Burkowski's primary expertise is in circuit design (hardware) not software. The article, however, was written for a medicalengineering group, not for computer hardware specialists.
[36]
Counsel for the defendants objected to this article being used for any purpose other than as an assessment of Professor Burkowski's credibility. The decisions in  <FRAGMENT_SUPPRESSED>  (Man. Q.B.) were cited as authority for this limited use of prior inconsistent statements. The article, however, is not a prior inconsistent statement; Professor Burkowski fully adopted it. He took a consistent position throughout his testimony. His evidence was directed to "the physical phenomena that is being described by computer scientists when words such as 'memory', 'machine language' etc. are used 'by them'." It was with respect to the physical operation of the machine that he had been asked to give evidence.
Retrieving a Program from ROM
[37]
Not only is the program when written a sort of instruction manual, the program retains its character as such in the computer. It can be "read out" of the ROM as and when required. A "disassembler" program is often used for this purpose. Thus the hexadecimal code version of the programs Autostart ROM and Applesoft can easily be displayed on the screen of the monitor or produced in a printout version by "reading" such directly from the respective chips. In addition this hexadecimal form of the program can be converted subsequently to its original source code assembly language version without great difficulty. Indeed it is this ability to read out of ROM the programs written therein which allows a comparison to be made between the programs encoded in the Microcom, Mackintosh and Apple II + ROMs in this case - for the purpose of determining whether there has been copying. (The chips in the Microcom and Mackintosh are technically not ROMs but EPROMs but this is irrelevant for present purposes).
[38]
While the programs can be "read out" of ROM, and they are occasionally so read by human beings for diagnostic purposes when the comptuer is malfunctioning, this is not their primary purpose. As is evident from the above, computer programs are designed primarily to be "communications" to computers. What is more they are used to cause the computer (the CPU) to perform certain operations (to perform calculations; create and retrieve information from data banks; facilitate word processing). No other form of written text operates in quite this way and indeed it stretches ordinary conceptual notions of the nature of a written text to conceive of it operating in this fashion. Nevertheless, as I understand it, this uniqueness is the essence of the dispute as to whether copyright exists.
[39]
One last point need be made. Once it has been decided that a computer system will use a certain microprocessor (in this case a 6502) and once the ROM chips have been programmed in relation thereto, software (application programs) subsequently developed will be designed by reference to the ROM programs already in place. Such software packages may be written by third parties or the manufacturer of the computer system itself. But, in any event, it becomes very difficult without copying the Autostart ROM and Applesoft programs to create another computer system which can "run" (use) all the application programs which have been designed for use with the Apple II + without copying the ROM. The evidence does not disclose that this is impossible but it is difficult and would require extensive time and effort. This is the economic factor which underlies the dispute between the plaintiffs and the defendants in this case.
Aspects Not in Issue
(a) Copyright in Source Code
[40]
The defendants do not dispute the fact that the written assembly language code versions of the programs fall within section 4 and section 2 of the Copyright Act, R.S.C. 1970, c. C-30:
"... copyright shall subsist ... in 'every original literary, dramatic, musical and artistic work' ...
'literary work' includes maps, charts, plans, tables and compilations;"
Writings in the form of alphanumeric code have obviously been included within the definition of compilation.
[41]
Counsel for the plaintiffs cited in support of his argument that the assembly code version of the program was an appropriate subject matter for copyright:  <FRAGMENT_SUPPRESSED>  C.P.R.(2d) 179 (F.C.A.); Bulman Group Ltd. v. "One Write" Accounting Systems Ltd. (1982), 62 C.P.R.(2d) 149 ( <FRAGMENT_SUPPRESSED>  defendants in their written form. The copying which occurred was from the chips directly. Chips identical (with the exceptions already noted) to those in the Apple II + computer containing Autostart ROM and Applesoft were made using an EPROM "burner". It is not necessary to explain the process involved suffice it to say that they programs in the defendants' chips were identical to the plaintiffs' programs except for the minor difference noted in paragraph [5].
(b) Substantial Copying
[43]
Counsel for the defendants does not dispute the fact that if the copying of the ROM chips is a copying of the plaintiffs' assembly code program, then there has been a substantial copying of that program. The original assembly code version had comments written beside some of the instructions. This is the usual practice of programmers. It is called in-line documentation and serves to enable the programmer to keep track of what he or she is doing, as the program is written, to recall why a particular instruction was used. There are also some mnemonics in the program which are aliases (a sort of code within a code). Neither of these are converted into hexadecimal or object code instructions. Consequently they do not become part of the program embodied in the ROM.
[44]
It is clear nevertheless, that in copying a ROM chip, substantial copying of the program as originally written occurs despite the fact that the in line documentation and other elements of the program as originally written are not copied. It was appropriate for counsel to concede that if copyright exists there had been substantial copying. The cases cited in support of the plaintiffs' position in this regard are:  <FRAGMENT_SUPPRESSED>  (F.C.A.), reversing (1983), 50 A.L.R. 581 (F.C.).
(c) Ownership
[45]
The third aspect of this case which counsel for the defendants abandoned, in argument, is any contestation as to the ownership of the copyright by the plaintiffs. It being conceded that the plaintiff is the owner I need make no assessment of the facts in this regard. I would note, however, as I indicated to counsel in the course of the proceedings, my preliminary view of the evidence is that it was not sufficient to rebut the presumption ( <FRAGMENT_SUPPRESSED>  result of section 36(2) of the Copyright Act:
"A certificate of registration of copyright in a work
is evidence
that copyright subsists in the work
and that the person registered is the owner
of such copyright."
The Issue
[46]
The issue is whether a computer program which originates as a written text, in the normal and usual sense of those terms, but which has a dimension (as appears from the facts set out above) which it is not traditional to associate with such texts, continues to be covered by copyright when it is converted into its electrical code version, or more precisely in this case when it is embodied in a device designed to replicate that code.
[47]
The defendants' argument that copyright protection does not so extend, has several facets: (1) the hexidecimal code version of the program is not a translation of the source code version; (2) since there is a one to one relationship between the source code program and its embodiment in the chip there is a merger of the idea and the expression of the idea which copyright law does not cover; (3) the text of the Copyright Act does not cover computer programs in their chip form; (4) there are compelling policy arguments for refusing to extend copyright protection in the present case such as potential restrictions on commerce and a possible overlap with patent law.
Hexadecimal Code - A Translation?
[48]
The defendants' position is that there is no copyright protection given to the hexadecimal form of the source code program because it is not a translation of that work but a different literary work. The conversion from assembly code to hexadecimal code, indeed from any computer language (code) to any other, is called a "translation" by computer programmers. I agree that this is not a relevant factor. The question is whether or not the hexadecimal code version is a translation of the original assembly code version, in terms of the Copyright Act, R.S.C. 1970, c. C-30, If so, then the right to produce any such translation belongs exclusively to the holder of copyright in the original work:
"3(1) For the purposes of this Act, 'copyright' ... includes the sole right
(a) to produce, reproduce, perform
or publish any translation
of the work;"
The argument, as I understand it, is that while the assembly language source code version can be characterized as a set of instructions to the CPU (a series of mnemonics or operations that describe what the CPU should do), the hexadecimal form of the program is a description of the ROM chip. Counsel argues that these may very well be two descriptions of the same thing but as such they are two different literary works.
[50]
I do not find this argument convincing. In the first place I note that "translation" in the Concise Oxford Dictionary (6th Ed. 1979) is defined as:
"... express the sense of (word, sentence, speech, book poem) in or into another language,
in or to another form of representation
."
The conversion from one code to another clearly falls within that definition.
[51]
An analogy can be drawn to the conversion of a text into morse code. If a person were to sit down and convert a text into the series of dots and dashes or which morse code is comprised, one might argue that the resultant notations were really instructions to the telegraph operator on how to send the message. But the message written in morse code, in my view, still retains the character of the original work. It is not a different literary work. Similarly, a text written in shorthand might be said to constitute a description of the oral sounds of the text if it were spoken aloud (shorthand being phonetically based), but that would not make it a different literary work from the long hand version.
[52]
In my view the conversion of a work into a code, or the conversion of a work originally written in one code into another code constitutes a translation for the purposes of the Act. In addition, as noted above, a programmer, in creating a program, is not thinking in terms of the specifications of the ROM chip, either writing the assembly code version or when the hexadecimal notation is prepared. What media is finally chosen for embodiment of the program is irrelevant to the programmer. Accordingly, I find it difficult to accept counsel for the defendants' argument that the hexadecimal form of the program is a different literary work and not a translation of the original.
Expression - Idea - Merger
[53]
It is argued that copyright does not extend to computer programs because (1) copyright protects the expression of the idea not the idea expressed and (2) a computer program as embodied in a ROM chip exhibits a merger of the idea and the expression of that idea.
[54]
Counsel for the defendants relies heavily on the decision in:  <FRAGMENT_SUPPRESSED>  (S.C. of Victoria). Those cases involved a publication by the plaintiff (a book) in which a new method of teaching arithmetic was described. The method used a number of wooden rods of varying lengths and colours, all having a uniform thickness (one centimeter square). The book set out a table describing the number of rods required, their respective lengths and colours. There is no indication that the book contained any diagrams or illustrations of the rods. I reproduce part of the editor's note at 37 Fox P.C. 93:
"It will be noted that, ... the plaintiff did not allege that his copyright in his book was being infringed but only his copyright in his rods. ... If the rods in issue had been copied from illustrations in the plaintiff's book the result might well have been different, for it is trite law that infringement exists where a copyright work is reproduced 'in any material form whatsoever'."
[55]
The claim before the Canadian courts focussed on section 2(v) of the Canadian Act:
"'every original literary, dramatic, musical and artistic work' includes every original production in the literary, scientific or artistic domain
whatever may be the mode or form of its expression, such as
books, pamphlets, and other writings, lectures, dramatic or dramaticomusical works, musical works or compositions with or without words, illustrations, sketches, and plastic works relative to geography, topography, architecture or science;"
(There is no comparable provision in the Australian legislation and therefore the  <FRAGMENT_SUPPRESSED>  his rods were artistic, literary, musical or dramatic because as long as they were "original productions in the scientific domain" they were to be considered as falling within the scope of works protected by copyright. Both the Exchequer Court and the Supreme Court rejected that argument.
[56]
The plaintiff claimed that even if the rods could not be said to fall within the Act pursuant to section 2(v) they were nevertheless literary or artistic works or works of artistic craftsmanship. That argument was rejected by both Canadian Courts on the same ground as it had been by the Australian court in  <FRAGMENT_SUPPRESSED>  compilations, there is in my view no infringement of the copyright in those tables or compilations unless that which is produced is itself something in the nature of a table or compilation which, whether it be in two dimensions or three dimensions, and whatever its material form, reproduces those tables. Were the law otherwise, every person who carried out the instructions in the handbook in which copyright was held to subsist in  <FRAGMENT_SUPPRESSED>  those instructions, would infringe the plaintiff's literary copyright. Further, as Mr. Fullagar put it, everybody who made a rabbit pie in accordance with recipe in
Mrs. Beeton's Cookery Book
would infringe the literary copyright in that book. ..."
The Supreme Court upheld the judgment of Mr. Justice Noel on essentially the same ground. The court noted at page 84, that the original work was the plaintiff's book and that in seeking to assert a copyright in the rods which were described in the book, as opposed to the book itself, the appellant was faced with the principle that an author has no copyright in ideas but only in his expression of them. Reference was made to the application of this principle in  <FRAGMENT_SUPPRESSED>  out sleeves. The court held that "The thing is in truth a measuring instrument: it is no more a chart or plan within the Copyright Act than is a scaled ruler ..." (Lindley, L.J., at page 425).
[59]
<FRAGMENT_SUPPRESSED>  d'Abonnés". This title referred to a weekly competition which was designed to increase the circulation of the plaintiff's paper "L'Information Sportive". The competition involved a subscription receipt held by the purchaser of the paper; a questionnaire relating to sports topics to be answered by holders of subscription receipts carrying certain numbers and conditions; and, terms of the contest set out in the paper. The defendant commenced publication of a weekly leaflet called "Mots croisés" which contained a competition called "Quizz Général de la Publication Loisir Favori Enrg." The court rejected the plaintiff's claim that this activity infringed his copyright. The court stated that the plaintiff had misconceived the nature of copyright and was really seeking protection of his contest against an encroaching competitor who was running a contest of a similar nature. But, there was no copying of the relevant written texts - it was the idea of running a contest along generally similar lines which was copied.
[60]
It appears from these cases that the principle that copyright covers the expression of ideas but not the ideas themselves is used in the jurisprudence to cover at least two different situations. It is used in cases such as Hollinrake and Cuisenaire to indicate that the "work" for which copyright is sought is not a type (eg: literary, artistic) that falls within the  <FRAGMENT_SUPPRESSED>  Act. It is used in cases such as Moreau to indicate that the two works in issue are not, in fact, similar - there has been no substantial copying. Thus in making Mrs. Beeton's rabbit pie there is no substantial copying of the recipe book - the instructions found therein have been followed but the book has not been copied.
[61]
Neither of these applications of the idea - expression principle apply in the present case. The program as originally written is copyrightable subject matter. There has in fact been copying - the code read from the defendants' chips is the same as that which can be read from the plaintiffs' chips. I do not see that the decision in the Cuisenaire case in any way assists the defendants in this case. The computer program when written is clearly a literary work. What is more, its embodiment in a silicon chip retains the form of expression of the original work. The program in its source code version can be retrieved (read) by a process of translation of translations from the ROM chip. There was no such relationship between the words in the book "Nombres en Couleurs" and the rods which were in issue in the Cuisenaire case. No part of the text of the book could be retrieved or "read" from the rods.
[62]
Counsel argues that in copying the ROM the defendants are doing no more than following the recipe prescribed by the program, ie: making Mrs. Beeton's apple pie. I think a closer analogy is that what they are doing is copying the recipe book.
[63]
What then of counsel's argument that a computer program exhibits a merger of the idea and the expression of the idea and therefore it is not copyrightable. I have considerable difficulty with this argument from a number of points of view. In the first place, if this argument is valid then it is difficult to understand why the concession was made that the assembly code version of the program is copyrightable. Surely if there is a merger of idea and expression, it exists not only in the machine code version of the program but also in the written assembly code version as well. Secondly, the exact scope of the legal rule (if one exists) that when there is a merger of the idea with its expression, copyright protection does not operate, is not at all clear. And, thirdly, the evidence that there is a multitude of forms of expression in which any given program can be written seems to me to demonstrate that there is no merger of the idea and the expression of the idea with respect to the programs in issue.
[64]
The Cuisenaire, Hollinrake and Moreau decisions do not stand for the proposition, urged by counsel, that when there exists a merger of the idea and the expression thereof this renders the work uncopyrightable. I have not been referred to any United Kingdom, Australian or Canadian case where that rule has been applied as the ratio of the case. Counsel's argument in the present case seems to be that there is a merger of idea and expression because there can be only one pattern in the ROM chip ie: one way of structuring that chip to enable it to replicate the plaintiffs' program. But this clearly cannot be a case of merger rendering the device uncopyrightable because the same can equally be said of every record or cassette tape.
[65]
I cannot disguise the fact that in seeking to apply the alleged merger rule I have considerable difficulty; it seems to me that many works which are clearly copyrightable exhibit a merger of the idea they convey and the expression thereof: a poem, a play, a painting, a map, a chart. It is only if the idea communicated by such works is described in highly abstract, remote and general terms that one could say there is no merger of the idea they convey and the expression in which that idea is conveyed. In addition, the word "idea" itself is of varying definition. (The definition of "idea" in the Concise Oxford Dictionary (6th Edition) is partly as follows:
"1. Archetype, pattern, as distinguished from its realization in individuals; (Platonic Philos.) eternally existing pattern of which individual things in any class are imperfect copies. 2. Conception, plan, of or of thing to be aimed at, created, discovered, etc., ... 3. Notion conceived by the mind ... way of thinking ... vague belief, fancy, ... 4. (Descartes, Locke) immediate object of thought of mental perception; (Kant) conception of reason transcending all experience; (Hegel) absolute truth of which all phenomenal existence is the expression."
[66]
Examples given in argument of the application of the merger principle are formulations such as E = mc2, the phythogorean theorem, or various algebraic proofs. It may be that these examples demonstrate nothing more than that the particular idea being expressed is really information about the external world (recognizing that E = mc2 is in fact a hypothesis) and that factual information is something which copyright does not protect. I see an analogy, for example, between a statement such as "the Prime Minister of Canada met with the President of the United States on March 17" and "the square on the hypotenuse of a right-angled triangle is equal to the sum of the squares on the other two sides". Neither of these phrases as such, apart from a larger text in which they might appear, would be subject of copyright. The example of algebraic proofs leads, it seems to me, to an almost philosophical discussion of the nature of intellectual thought. (Such proofs are tautological in nature, operate within a system where the notation or terms of expression can be completely arbitrarily defined, consist of statements about the validity of relationships within that system. Indeed one could ask whether instead of exhibiting a merger of idea and expression, algebraic proofs do not exhibit an independence of the two.) It is a discussion which a higher court than this may find it necessary to consider but which I consider it sufficient to deal with by noting that a computer program is not similar to any of the examples cited. It is not a statement reporting a fact. It is not comparable to an algebraic proof. It is a creation in the same way that an instruction book is a creation. While copyright would not prevent someone making Mrs. Beeton's rabbit pie (indeed it was to encourage people to do so that Mrs. Beeton's Book of Household Management was first published), it does prevent someone copying the book itself. The order in which the recipes are listed, the form and expression in which they are couched are properly the subject of copyright. This order, form, pattern of expression of the plaintiffs' program is retained in the ROM and is copied when the defendants copy the ROM.
[67]
There is another branch of the merger doctrine which has prevailed in the United States and which it is necessary to consider. It would appear to have originated with the decision in  <FRAGMENT_SUPPRESSED> , a case referred to in several "commonwealth" decisions, but without reliance on the full scope of the decision given therein. [ <FRAGMENT_SUPPRESSED>  (2nd Ed. 1967), p. 126; James Lahore, Intellectual Property Law in Australia (1977), pp. 8, 41, 42, 81, 196.  <FRAGMENT_SUPPRESSED>  accounting forms (consisting of certain ruled lines and headings) contained in the book. The court found that the defendant's use of the book and development of his own forms did not breach the plaintiff's copyright - ie: there was no substantial copying. But the court went further and drew a distinction between works of science or instruction and other types of works. It held that where a useful art could only be employed by using the forms or diagrams by which it was explained there would be no copyright in such forms and diagrams. Mr. Justice Bradley (for the court) stated the following, at pages 103 - 104:
"The very object of publishing a book on science or the useful arts is to communicate to the world the useful knowledge which it contains. But this object would be frustrated if the knowledge could not be used without incurring the guilt of piracy of the book.
And where the art it teaches cannot be used without employing the methods and diagrams used to illustrate the book
, or such as are similar to them, such methods and diagrams are to be considered as necessary incidents to the art, and given therewith to the public; not given for the purpose of publication in other works explanatory of the art, but for the purpose of practical application.
"
Of course, these observations are not intended to apply to ornamental designs, or pictorial illustrations addressed to the taste
. Of these it may be said, that
their form is their essence
, and their object, the production of pleasure in their contemplation ..."
The court thus proceeded to lay down a much broader rule than was necessary for the purpose of the case; it held that the forms in the book were not protected by copyright. There is no doubt that this conclusion was in part at least shaped by the wording of congressional legislative authority under the United States Constitution. (See particularly  <FRAGMENT_SUPPRESSED>  that country.
[69]
<FRAGMENT_SUPPRESSED>  Copyright, volume 1, paragraph 2.18 (1985). This criticism proceeds in part on the basis that it is simply inaccurate to think that expositions on science or the useful arts require that any particular form provided in the original exposition must be followed in order to avail oneself of the "idea" of the work. All such works it is noted can be expressed in a variety of forms.
[70]
This development of copyright law is not one that has been adopted in this country, as far as I know. Indeed rejection thereof would seem to be implicit in the Court of Appeal's decision in  <FRAGMENT_SUPPRESSED>  Division Bulman Group Ltd. v. "One Write" Accounting systems Ltd., supra, para. [41] . At issue in those cases was the copyrightability of accounting forms. Initially the claim for copyright in such forms was rejected by the Trial Division on an application for an interlocutory injunction. The Court of Appeal overturned that decision indicating that there was a seriously arguable case. Following full trial of the issue copyright was held to exist (this decision was not appealed to the Court of Appeal).
[71]
In any event, I have not been persuaded that there is a merger of the idea and the expression thereof in a computer program. The fact that a program can be written in a variety of different forms, that the same programmer would not write a program the same way if he or she were to start anew a second time, that the programmer is indifferent to the medium in which the program is embodied, all indicate that computer programs do not fall within the merger exception to copyrightable subject matter (if such exception exists).
Copyright Act - Statutory Interpretation
[72]
Section 3 of the Copyright Act provides:
"... 'copyright' means the sole right
to produce or reproduce the work or any substantial part thereof in any material form whatever
..."
These opening words are followed by a list of specific examples, infra, para. [86]. The question, then, is whether these opening words of section 3 encompass the embodiment of the plaintiffs' program in the ROM chip.
[73]
No one disputes, of course, that when the present Copyright Act was originally enacted by Parliament in 1924 no thought could have been given to computer programs and whether they would be covered by the provisions of the Act. This is not a relevant consideration, since the only question is whether the terms of the Act as drafted can fairly be said to cover such programs as encoded in the ROM chip.
[74]
The legislative history of the present section 3 of the Copyright Act is of some assistance in this regard. The 1842 United Kingdom Copyright Act (Stats. U.K. 1842, c. 45), which applied initially to Canada as well, provided:
"'Copyright' shall be construed to mean the sole and exclusive liberty of printing or otherwise multiplying copies of any ... 'book'"
"Book" was defined as including "every Volume, Part or Division of a Volume, pamphlet, sheet of letter press, sheet of letter press, sheet of music, map, chart, or plan. ..."
[75]
<FRAGMENT_SUPPRESSED>  sheets created for use in player pianos were copies of the relevant sheet music for the purposes of the Act. It was argued, by the plaintiff, that one could take the perforated sheets and write out the notes of music therefrom in ordinary musical notation providing one understood the method or pattern of making the perforations. The defendant argued, on the other hand, that: the piano rolls were not covered by the terms of the 1842 Act; music boxes and barrelorgans which operated on the same principle had long been known; the legislative had not intended "sheet of music" to cover this type of apparatus for the mechanical reproduction of music. The courts agreed with the defendants' representations. Mr. Justice Stirling, at trial stated:
"... I think it is possible that, with considerable trouble, a person might so far master the scheme according to which the perforations are made as to be able to read the notes thereby denoted, but this is not shown in any case to have been done. ... It also appears to me that for this purpose the rolls constitute an extremely cumbrous system of writing music, hardly available without the use of some mechanism which at present does not exist. Upon the whole, I think it is highly improbable that any one would ever go to the trouble of acquiring the art of reading these rolls.
"... The copyright conferred by that Act [of 1842] appears to me to be the exclusive liberty of multiplying copies something in the nature of a book. The rolls, so far as they contain perforations, are, in fact, used simply as parts of a machine for the production of musical sounds, not for the purpose of a book. ..."
The Court of Appeal in upholding this decision agreed: that the then Copyright Act treated a sheet of music as if it were a book; that a perforated sheet which became part of a musical instrument to play the music is different from a sheet of music which "appeals to the eye", that the defendants perforated sheets were part of a "mechanical contrivance" for producing musical notes.
[76]
This decision was followed in several subsequent decisions, on both sides of the Atlantic ocean: Nemark v. the National Phonograph Company (Limited) et al. (1907), 23 T.L.R. 349 ( <FRAGMENT_SUPPRESSED> .
[77]
The United Kingdom copyright legislation (which still applied at that time to Canada) was amended in 1911 (Stats. U.K. 1911, c. 46). The new provisions in the legislation of 1911 read:
"1(2) ... 'Copyright' means the right to produce or reproduce the work or any substantial part thereof
in any material form whatsoever
, to perform or in the case of a lecture to deliver the work ... and shall include the right, -
a) to produce, reproduce, perform, or publish any translation of the work;...
d) in the case of a literary, dramatic, or musical work, to make any record, perforated roll, cinematograph film, or other contrivance by means of which the work may be mechanically performed or delivered."
And section 19(1) was added:
"Copyright shall subsist in records, perforated rolls, and other contrivances by means of which sounds may be mechanically reproduced ..."
These subsections were eventually carried forward into the Canadian legislation and appear in almost identical form as section 3 and section 4(3) of the present Act. (Changes in the United States law seemed to be slower in coming and in any event copyright legislation in that country has followed a different legislative history. This is so in part, at least, because of that country's constitutional framework.  <FRAGMENT_SUPPRESSED>  (U.S.Dist. Ct.) where it is indicated that before amendment in 1976 the copyright law of that country only protected copies which were perceptible to human beings - things written or printed, and that a requirement of a communicative function to individuals stemmed from the early decision of  <FRAGMENT_SUPPRESSED>  perceive.)
[78]
Counsel for the plaintiffs argues that the opening words of section 1(2), now section 3 of the Act, "were purposely drafted broadly enough to encompass new technologies which had not been thought of when the Act was drafted. I agree.
[79]
It seems clear that the 1911 amendments did away whith any requirement that in order to be covered by copyright the copy or reproduction of the work had to be in a human readable form. Equally, I think the 1911 amendments did away with any rule which would deny copyright protection to a work merely because the copy or reproduction could be characterized as being part of a machine. ( <FRAGMENT_SUPPRESSED>  (C.A.), for a case which discusses the change wrought in the law by the 1911 amendment.)
[80]
The piano rolls in  <FRAGMENT_SUPPRESSED>  are removable with relative ease but they are not intended to be removed. They are not removable in the same manner as a floppy disc or a cassette is removable. The ROM chip is meant to be left in the machine on a permanent basis. However, the legislation draws no distinction on this basis. Accordingly, I think it is irrelevant, in the present case, whether the program is encoded in a floppy disc, on a punch card or in a ROM chip. The copyrightability issue does not differ merely on the basis of the medium in which the program is found.
[81]
I can see no difference at a physical level between a device such as a record which "contains" a musical work by virtue of the grooves impressed therein, and a ROM chip which "contains" a program by virtue of the pattern of conductive and non-conductive areas created therein. In my view the opening words of section 3 clearly cover the plaintiffs' program as embodied in a ROM chip. Such embodiment is surely the production or reproduction of the work in a material form, just a record or a cassette tape is a production or reproduction of a work in a material form. (I have not overlooked the fact that there is a separate section in the Act which covers copyright in records.)
[82]
In my view the requirement of "readability" or "appearance to the eye" found in the jurisprudence requires no more than that there be a method by which the work in which copyright is claimed and the work which is alleged to infringe can be visually compared for the purpose of determining whether copying has occurred. Since in this case the programs can be "read" out of ROM and so compared, this requirement is met. I adopt in this regard the reasoning of Mr. Justice Megarry in Thrustcode Limited and  <FRAGMENT_SUPPRESSED>  (Ch.D.), at page 505:
"... For computers, as for other things, what must be compared are the thing said to have been copied and the thing said to be an infringing copy. If these two things are invisible, then normally they must be reproduced in visible form, or in a form that in some way is perceptible, before it can be determined whether one infringes the other.
"... Normally, ... what will be needed is a print-out or other documentary evidence of the program alleged to have been copied, and of the alleged infringing program, or sufficient parts of each."
And those of Mr. Justice Fox in the Computer Edge case, supra, para. [44], at page 237:
"... In my view it does not matter, if it be the fact, that the code cannot be seen, ... The adaptation of the work is rendered perceptible with a machine. It is sufficient that the code has its existence in, and is ascertainable from, the chips."
[83]
For cases which have dealt with the creation of a work in a material form different from that in which it originated see:  <FRAGMENT_SUPPRESSED>  (H.L.) (brooches and dolls from a Popeye cartoon);  <FRAGMENT_SUPPRESSED>  (C.A.) (boats from plans); and  <FRAGMENT_SUPPRESSED>  reproduction which reproduction exists in a different material form from the original is still an infringement of copyright in the original. The reasoning found in these cases in applicable to the present situation although I note that the plaintiff does not claim copyright in the ROM chip itself as a device but only in the program encoded therein. In this respect it differs from the three-dimensional cases cited above. In my view this strenghtens rather than weakens the plaintiff's claim to copyright.
[84]
As I understand counsel's argument it is that even if the reproduction itself does not have to be in human readable form there is a requirement that the purpose for which that reproduction is made must ultimately be to communicate the work to human beings. A record or cassette when used with a machine produces sounds for human listening while the ROM chip does not so communicate to humans as its primary function. As noted above, it can be used to so communicate and for certain limited purposes is so used, but that is not its primary purpose.
[85]
It is argued that the requirement that the primary purpose of the work be to communicate to human beings in order for copyright to exist is found in both the context of the Act and in the wording of specific sections thereof. The context argument is one that has found favour with some Courts. I note particularly the dissenting decision of Mr. Justice Sheppard in the Computer Edge case supra, para. [44], at page 277. His remarks were addressed to the meaning of the words translation and adaptation in the Australian Copyright Act but it is the approach which counsel urges on this court:
"... There seems to be running through these various provisions [of the Act] the idea or notion that what is the subject of copyright (whether a work or an adaptation thereof) will, although not immediately published and perhaps never published, be capable of being published and thus being seen or heard. The very idea of publishing is that something should be seen or heard..."
[86]
It is argued that even if the context of the Act does not make it clear that computer programs in their machine code version fall outside the Act, the textual wording of pertinent sections does so indicate. Section 2(v) and section 3 are referred to. Section 2(v) states:
"every original literary, dramatic, musical and artistic work" includes every original production in the literary, scientific or artistic domain
whatever may be the mode or form of its expression, such as
books, pamphlets, and other writings, lectures, dramatic or dramaticomusical works, musical works or compositions with or without words, illustrations, sketches, and plastic works relative to geography, topography, architecture or science;"
And section 3:
"3.(1) For the purposes of this Act, 'copyright' means the sole right to produce or reproduce the work or any substantial part thereof
in any material form whatever
, to perform, or in the case of a lecture to deliver the work or any substantial part thereof in public; if the work is unpublished to publish the work or any substantial part thereof;
and includes
the sole right
(a) to produce, reproduce, perform or publish any translation of the work;
(b) in the case of a dramatic work, to convert it into a novel or other non-dramatic work;
(c) in the case of a novel or other non-dramatic work, or of an artistic work, to convert it into a dramatic work, by way of performance in public or otherwise;
(d) in the case of a literary, dramatic, or musical work, to make any record, perforated roll, cinematograph film, or other contrivance by means of which the work may be mechanically performed or delivered;
(e) in the case of any literary, dramatic, musical or artistic work, to reproduce, adapt and publicly present such work by cinematograph, if the author has given such work an original character; but if such original character is absent the cinematographic production shall be protected as a photograph;
(f) in case of any literary, dramatic, musical or artistic work, to communicate such work by radio communication;
and to authorize any such acts as aforesaid."
The general word, both "whatever may be the mode or form of its expression" in section 2(v) and "in any material form whatever" in section 3, it is said, must be interpreted by reference to the particular examples which follow in each case. That is, in the case of section 2(v) "books, pamphlets ..." and in the case of section 3 the particular forms of production or reproduction itemized by each of subsections (a) to (f). It is argued that the principle of statutory interpretation noscitur a sociis is applicable.
[88]
In my view counsel's arguments based on the context of the Act and on the specific wording of the sections thereof are conclusively answered by section 3 itself. Section 3 provides that "copyright means the sole right to produce or reproduce the work ... in any material form whatever". In my view that clearly covers the program as embodied in the ROM chip. To find otherwise, it seems to me, would require reading words into section 3 of the Copyright Act which are not there.
[89]
With respect to the argument based on the principle noscitur a sociis, that principle is only applicable to cut down the general words of a statutory provision when it is clear that Parliament did not intend a broad one. Parliament's intention in the case of section 3, and perhaps also section 2(v), is very clear. The ennumerations are used as examples. The general wording is said to "include" the specifics. In that context, the principle noscitur a sociis can have no role to play.
[90]
It is also argued that it is clear that the opening words of section 3 were not intended to cover works in "any" material form because if this were so there would have been no need to include in the Act section 3(1)(d). The text of section 3(1)(d) itself indicates, it is said, that only contrivances which communicate to human beings were meant to be covered by the Act. This last is based in part on the fact that "delivery" in section 2 of the Act only refers to delivery in relation to a lecture and that "performance" is defined as meaning any acoustic or visual representation. In this regard counsel for the defendants argues that application programs which cause a text or graphics to be displayed on the screen, or which result in sounds being emitted or music being played are covered by copyright. In his view they are contrivances (in the chip version) by means of which the work may be mechanically delivered.
[91]
The argument based on section 3(1)(d) I find unconvincing. It has a two-edged quality. It can equally be asked why, if Parliament only intended to cover records or contrivances which utter sounds or communicate to humans, the opening words of section 3 were drafted so broadly. The references to the definition sections are not persuasive. They only purport to define one particular aspect of delivery as it relates to lectures; no all inclusive definition is given of that word. The definition of performance is irrelevant since one has suggested that it applies in the present case. Also, I have difficulty with the distinction counsel makes between programs which result in something being displayed on the screen and those (such as ROM) which do not. When "something" is displayed on the screen it is not the program (ie: it is not the original or a hexadecimal version thereof which is displayed). The program remains invisible unless dissassembled by the translation processes similar to that used to "read" the ROM.
[92]
In addition, I think there is merit in the argument that the ROM chip, whatever the interpretation of the opening words of section 3, can be said to fall within paragraph 3(1)(d) as a contrivance by means of which the work may be delivered. The program (as noted above) can be delivered to the screen of the monitor, or as a printout to be read by human beings. I do not find it necessary to decide whether "delivery" to the CPU satisfies paragraph 3(1)(d).
[93]
Reference is also made to sections 45 and 46, as support for the conclusion that Parliament did not intend to cover works in "any" material form. Section 45 states that copyright does not exist outside the parameters of the Act and section 46 excludes from the Act's protection certain designs registerable under the Industrial Design Act, R.S.C. 1970, c. I-8. Section 45 of the Act is of no assistance; it adds nothing to a determination of what is and what is not covered by the Act. Nor is section 46 relevant since it relates to works registerable under the Industrial Design Act, which a ROM chip, at least insofar as the program contained therein is concerned, manifestly is not.
[94]
Another contention put forward is that because the Copyright Act can give rise to penal consequences (section 25) it should be interpreted restrictively, that is in favour of the defendants. (In support of this position are cited:  <FRAGMENT_SUPPRESSED> , (F.C.A.); r. v. Budget Car Rentals (Toronto) Ltd. (1981), 31 O.R.(2d) 161 (C.A.), at 165, 167-8, 173;  <FRAGMENT_SUPPRESSED>  (C.A.) at 137 - 139;  <FRAGMENT_SUPPRESSED>  at 638.) The present case is not one concerning the commission of an offence. It is a civil action between two private parties. The Federal Court of Appeal in  <FRAGMENT_SUPPRESSED> , at pages 386-7, cast doubt on the appropriateness of applying the restrictive rule of statutory interpretation applicable to criminal offences in such circumstances. And indeed the Ontario Court of Appeal in  <FRAGMENT_SUPPRESSED>  interpretation of that case, the rule means nothing more than that penal statutes are to be interpreted as are all statutes, in accordance with the ordinary meaning of the language they employ. In any event, I would only find it necessary to consider the appropriateness of the defendants' restrictive interpretation argument if I found section 3 of the Copyright Act to be ambiguous. I do not find such an ambiguity. As noted above "to produce or reproduce ... in any material form" seems to me to be quite clear.
Policy Considerations
[95]
It is argued that copyright should not be held to apply to the program as encoded in the ROM chip because this constitutes the granting of a monopoly on an item of commerce - a restriction on commerce which copyright legislation was never intended to create. It is contended that some programs are used in connection with machines to control certain manufacturing processes (special purpose programs) and that these can be covered by patent law. Consequently, it is argued copyright should not extend to computer programs because an overlap of copyright and patent law should be avoided. Counsel's two last policy arguments are: Parliament is presently in the process of discussing the extent to which copyright protection should apply to computer programs and to hold that the Act as presently drafted applies is to usurp Parliament's function; there has been considerable uncertainty as to whether the present legislation extends to computer programs and the defendants should not be penalized for acting as they did when there has been so much debate surrounding the subject.
[96]
With respect to the first argument, the purpose of the Copyright Act is and always has been to grant a monopoly. No distinction is made therein as to the purpose of the work created - for entertainment, instruction or other purposes. The legislation historically, in my view had two purposes: to encourage disclosure of works for the "advancement of learning", and to protect and reward the intellectual effort of the author (for a limited period of time) in the work. A book is an article of commerce, as is a map or a chart. The interpretation of the legislation which the defendant urges, based on a view that the Act was not intended to interfere with commerce, is both not accurate and would add a gloss to the statute which its wording does not bear.
[97]
With respect to the second argument, as I read the authorities and references to which I have been referred by counsel they indicate that computer programs are not per se patentable but that an apparatus or process that meets the standards of novelty and unobviousness required by the Patent Act, R.S.C. 1970, c. P-4, will not be disqualified from patent protection merely because a computer is used to operate the apparatus or implement the process. [See]: Barrigar, Legal Protection of Software from Unauthorized Use: Proprietary and Contractual Rights (1976), 30 C.P.R.(2d) 159; Re Application Number 961,392 (1971), 5 C.P.R.(2d) 162 ( <FRAGMENT_SUPPRESSED>  (S.C.); Dann Commissioner of Patents and  <FRAGMENT_SUPPRESSED>  (F.C.A.), application for leave to appeal to Supreme Court of Canada dismissed (1982), 63 C.P.R.(2d) 261; Re Bendix Corporation Application (Now Patent No. 1,176,734) (1984), 5 C.P.R.(3d) 198 (Pat. App. Bd.); Re Application for Patent of Dissly Research Corp. (Now Patent No. 1,188,811) (1984), 6 C.P.R.(3d) 420 (Pat. App. Bd.). See also Diamond, Commissioner of Patents and  <FRAGMENT_SUPPRESSED>  (S.C.). In addition, I do not see that overlapping areas of the law are particularly unusual (reference need only be made to the fields of tort and contract). Nor do I see it as the role of the courts to frame decisions to avoid such results. In addition, I would note that the present case does not deal with a special purpose program. It concerns the operation of a general purpose computer, although I must admit that I do not, at the moment, see any rationale for distinguishing between the two. I note that Mr. Justice Megarry in the Thrustcode case, supra, para. [82], did not think it necessary to draw such a distinction.
[98]
In support of this second argument the Court of Appeal decision in  <FRAGMENT_SUPPRESSED>  that a process involving the use of a computer program to perform certain calculations by reference to certain specifications was not patentable subject matter. It was held that the process being claimed was a mathematical formula which could be assimilated to a "mere scientific principle or abstract theorem" for which section 28(3) of the Patent Act prescribes that "no patent shall issue". As noted above, a computer program in my view is not the same as a mathematical formula. In addition, the task a computer is programmed to perform ("the process" in the Schlumberger case) must be distinguished from the program written to accomplish that task. Merely because the result is not now (eg: calculations based on the measurement of bore holes) does not mean that the program written to accomplish that task is not copyrightable - in the same way a text book on mathematics or an instruction manual is copyrightable.
[99]
With respect to the third policy argument, I was referred to proposals for the revision of the Copyright Act found in a publication entitled From Gutenberg to Telidon issued by the Minister of Consumer and Corporate Affairs in 1984. At pages 79 - 83 of that text the view is expressed that the existing copyright regime is inappropriate for computer programs that the term of protection should be much shorter (eg: 5 years for a program in human readable form). I was also referred to the report of the Parliamentary Sub-committee on the Revision of Copyright which issued more recently, entitled "A Charter of Rights for Creators". That report recommends, at pages 45-6, that the full regime of protection of copyright law (life of the author plus 50 years) is appropriate for computer programs, and that no distinction should be made between programs in human readable form and in machine readable form. The juxtaposition of these two is ample demonstration, if demonstration is needed, as to why courts consistently take the position that such policy considerations are not relevant to the role of applying the existing law.
[100]
The fourth aspect of counsel's "policy arguments" is also not relevant. Whether and how the law applies in given fact situations is the subject of daily debate. If it were not, the courts would be empty places. The closing comments of Mr. Justice Collier  <FRAGMENT_SUPPRESSED>  Group Ltd. v. "One Write" Accounting Systems Ltd., supra para. [41], at page 156, apply to the facts in this case:
"The defendant was wrong, in law and in fact, in its view that the plaintiff's forms could not be the subject of copyright. ... To my mind, there were reasonable grounds to assume copyright might well exist. The defendant chose to take the chance. A wrong assessment of the legal and factual position cannot be an excuse to avert the remedy of damages and an accounting of profits, as well as other relief claimed by the plaintiff."
See also  <FRAGMENT_SUPPRESSED>  C.P.R.(2d) 1 (S.C.C.) at page 15.
[101]
There was some evidence that the Copyright Office of the Department of Consumer and Corporate Affairs took an uncertain attitude as to whether or not the Copyright Act applied to computer programs. A pamphlet "available" in the Copyright Office and dated 1982 contains the statement:
"It is unclear under the current Act, which came into effect in 1924, whether or not computer programs or software are protected. However, written instructions for the use of a program are subject to copyright protection as 'literary' works."
There is no evidence that this pamphlet was distributed to the public or that any of the defendants had copies of it at the relevant time. Accordingly, I do not see that it has any role to play with respect to the present litigation.
Jurisprudence Existing Respecting Computer Programs
[102]
There are a growing number of cases in jurisdictions where the copyright law is not too dissimilar from our own which have held that computer programs in their machine code version are protected by the copyright law applicable existing in that jurisdiction. ( <FRAGMENT_SUPPRESSED>  (Ch.D.); Thrustcode Limited and  <FRAGMENT_SUPPRESSED>  (S.C.S. Africa); Apple Computer Inc. and  <FRAGMENT_SUPPRESSED>  can also be discerned in this country. ( <FRAGMENT_SUPPRESSED>  affirmed (A-873-85) by an unreported decision of the Court of Appeal November 29, 1985); La Société d' <FRAGMENT_SUPPRESSED>  of June 26, 1984); Logo Computer Systems Inc. v. 115778 Canada Inc. et al. (unreported decision of the Quebec Superior Court of October 25, 1983);  <FRAGMENT_SUPPRESSED>  (Ont. H.C.).) Counsel for the defendants argues that these are all interlocutory applications where the court has not had the benefit of trial and expert evidence. Secondly, he argues that in giving these decisions, the courts have thought that the program itself, in a written notational form, is actually within the computer rather than being found therein as an electrical code, or as a device designed to replicate that code.
[103]
I agree that most of the jurisprudence is of an interlocutory nature, although the decision of the Appeal Division of the Federal Court of Australia in the Computer Edge case supra, para. [44], contains a thorough treatment of the issue and was given after extensive evidence had been heard. I find its reasoning of considerable persuasive value. It dealt, of course, with the Australian legislation, which does not contain a broad statement of applicability (to the production of a work in any material form whatever) such as is found in section 3 of our Act, but that does not lessen the value of the reasons found therein.
[104]
With respect to counsel's contention that courts think the written program as a writing, is in the silicon chip, I disagree. There is a tendency in the decisions to talk of the machine language as being within the machine (in terms of ones and zeros). This is the way computer scientists talk. I do not think however, it is accurate to say that courts granting interlocutory injunctions have failed to recognize the real nature of a computer program. I note, for example, in  <FRAGMENT_SUPPRESSED>  wrote:
"On the evidence before me in this case I am clearly of the opinion that copyright ... subsists in the assembly code program of the game 'Frogger'. The machine code program derived from it
by operation of part of the system of the computer
called the assembler is to be regarded, I think as either a reproduction or an adaptation of the assembly code program ..."
And in Thrustcode Limited and  <FRAGMENT_SUPPRESSED>  Chancery Division stated that:
"
In the case of computer programs, the software appears to consist of articles which by magnetic or electrical means will make the hardware do certain things, together with what is recorded on various
tapes and discs. By means of this, the letters signs and numbers of the program may be made to appear on a screen or on a print-out; and if this is done, then the familiar process of comparison [of two written texts] is made possible."
And in the Computer Edge case, supra, para. [44], Mr. Justice Lockhart stated at page 263:
"There is perhaps room for debate as to the precise processes used in the Wombat ROMs and EPROM to generate the relevant sequences of electrical impulses; but the inescapable conclusion is that the Wombat ROMs and EPROMs contain representations of the very same sequence of impulses as are represented in the Apple ROMs."
[105]
I have occasion to consider much of the jurisprudence of other jurisdictions in  <FRAGMENT_SUPPRESSED> . I have not referred to that decision at any length in these reasons and do not propose to do so. This should not be taken as an indication that I disagree with the views expressed therein but merely that I consider it inappropriate to rely on my own decision given in an interlocutory proceeding, for the purposes of the present case.
[106]
Of considerable significance is the fact that the Quebec Superior Court more recently, in La Société d' <FRAGMENT_SUPPRESSED>  Quebec Court of Appeal dated April 4, 1985, court files 500-09-01151-844; 500-05-008597-849 C.S.M.) upheld copyright in four application programs. The Superior Court relied heavily on the Computer Edge decision, supra, para. [44], and in the characterization therein of programs in a chip form as translations or adaptations of the original work. The Quebec Court of Appeal referred to the breadth of section 3 of our Act.
Despite the lengthy list of defendants named in file T-1232-84 (the Mackintosh action), by the time of trial, consent judgment had been filed in relation to many. With respect to others, the plaintiffs indicated at trial that they did not intend to prosecute the claims. This left in issue only the claims against Mackintosh Computers Ltd., Compagnie d'Electronique Repco Ltée/Repco Electronics Co. Ltd. (hereinafter referred to as Repco), Maison des Semiconducteurs Ltée/House of Semiconductors Ltd., (hereinafter referred to as House of Semiconductors), Chico Levy, Joseph Levy and Nat Levy. File T-1232-84 (the Microcom action) concerns only three defendants: 115778 Canada Inc.; 131375 Canada Inc.; and James Begg.
[108]
Counsel for the defendants conceded that if the programs as encoded in the ROM chips were copyrightable subject matter the corporate defendants, Mackintosh Computers Ltd., and House of Semiconductors, (file number T-1232-84) and 115778 Canada Inc. and 131375 Canada Inc. (file number T-1235-84) had infringed that copyright. Thus, it is only necessary to deal in these reasons with the claims against the corporate defendant, Repco and the individual defendants, Chico Levy, Joseph Levy, Nat Levy and James Begg.
Microcom Action - Evidence re: Defendants' Activities
[109]
A summary of the evidence relevant to file number T-1235-84 (the Microcom action) follows. The corporate defendant, 115778 Canada Inc., was originally incorporated in June, 1982 for the purpose of engaging in the retail carpet business. This it did but in the fall of that year it expanded its field of endeavour to the computer business. In March 1983, 131375 Canada Inc. was incorporated and the computer business, previously operated by 115778 was transferred to this new company. James Begg was the sole owner (ie: the only shareholder) of both companies. He was the principal officer and director of 115778; he was the sole officer and director of 131375. During 1983 and 1984 he signed leases for the premises on which the companies operated; he supplied letters of credit and other documents to suppliers of component parts used in assembly of the computers; he reviewed and initialed the financial statements of the companies; he signed all the cheques for the company (although his evidence on the examination for discovery was that some of these were signed blank and left for his bookkeeper to fill in). During the time in question, he drew a weekly salary cheque from the 131375 company as an employee.
[110]
Mr. Begg's evidence on the examination for discovery, which was read into the record at trial, was that: the decision to get into the computer business was made on the advice of his general manager, a Mr. Scullion; he, Mr. Begg, did not really participate in the day to day running of the business because of illness; he knew the company was importing parts, assembling and selling "Apple compatible" computers; he understood Apple compatible computers to be computers that would run application programs written for Apple computers; he might have looked at the company's bank statements from time to time; he would probably have seen the company's advertisements, such as that part of which is set out below, when reading the newspaper at home.
[Diagram omitted. See original source.]
Mackintosh Action - Evidence re: Defendants' Activities
[111]
The evidence with respect to file T-1232-84 (the Mackintosh action) was that prior to March, 1983, Joseph, Nat and Chico Levy owned Repco (Engineering Co. Ltd.), each holding 1/3 of the total number of shares. Joseph was the president of that company, Nat the vice-president and Chico the secretary and general manager. They were also the only directors of the company.
[112]
Towards the end of 1982 a decision was taken to set up the Mackintosh and House of Semiconductor companies. Mackintosh was incorporated in December, 1982 and Chico Levy was the sole shareholder, officer and director. House of Semiconductors was run by Chico Levy as a sole proprietorship from around the same date until December 1984 when it was incorporated. Nat Levy advised Chico with respect to the setting up of these companies and suggested the name "Mackintosh" to him as appropriate for one of them.
[113]
The Mackintosh company was originally established with the intention that it would be a wholesaler of computers and establish a dealer network throughout the country. The House of Semiconductors assembled the computers from parts inported from the orient (Taiwan) or purchased from Repco; it also operated a retail outlet in Montreal. Repco's business, in part at least, was the selling of components such as chips and circuit boards. Blank EPROM chips were purchased from Repco by House of Semiconductors; House of Semiconductors programmed these, both for itself and for Mackintosh, by "burning" the plaintiffs' program into the EPROMs. The chips were then placed in the computers which Mackintosh and House of Semiconductors sold as "Applecompatible". On occasion House of Semiconductors imported ROM chips, directly from Taiwan containing the plaintiffs' program, instead of burning the program into blank EPROMs.
[114]
When the Mackintosh company was first incorporated, its corporate residence was listed as 8 Banff (which is also the Levy family residence). Repco had started from that address when it began. The annual report of Mackintosh filed with the Quebec "Inspecteur général des institutions financières", for the 1983 year, and dated February 15, 1984, lists the Banff avenue address as that company's corporate residence. Mackintosh had its office, however, at 119 Labrosse. Space there was "rented" from Repco. The 119 Labrosse premises were Repco's business premises; the telephone number there was Repco's (although it was listed in newspaper ads as that at which the Mackintosh company could be reached); Repco's secretarial staff provided secretarial services to Mackintosh.
[115]
In May 1983 when Chico Levy wrote to the Department of Consumer and Corporate Affairs concerning an alleged claim to the trademark "Mackintosh Computers", the letter was written on Repco's letterhead and was signed by Chico Levy as "Repco Electronics Co. Ltd./Div.". It stated:
"
disclaim the right to the exclusive use of 'Mackintosh' and 'Computers' apart from the Trademark of 'Mackintosh Companies'."
When Chico Levy was asked why he had used the term "we" in this letter if, as is being claimed, he was operating on his own with respect to Mackintosh and the House of Semiconductors, he replied that he had been told to do so by an official of the Department of Consumer and Corporate Affairs. This not a convincing explanation.
[116]
The corporate address given for the House of Semiconductors is 84-F Brunswick Blvd. These premises were originally occupied by Repco for warehousing purposes. House of Semiconductors "leased" part of these premises and, then, as its business grew took over the whole space. It is at these premises that House of Semiconductors does most of its assembly and line work; a retail outlet is also operated there. House of Semiconductors also occupied space at 904 Sherbrooke. Each page of the lease entered into with 91984 Canada for these premises carries Nat Levy's initials; it was at these premises that Nat Levy was served in his personal capacity for the purposes of this action.
[117]
Chico Levy's evidence on examination for discovery, which was read into the record, was that he considered himself no longer be involved with Repco once he started up his own businesses, Mackintosh and House of Semiconductors, in December 1982. He gave evidence that as of that date, he had given a lawyer instructions to sell his Repco shares. Documentation was filed showing a cancellation of Chico's share certificate in Repco as of March 31, 1983 and a transfer of those shares to Nat and Joseph Levy in equal proportions. The share transfer certificate does not carry the signature of a witness. On August 14, 1984, the two defendants, Mackintosh and Chico Levy were served with the statement of claim in this action. Chico Levy resigned as secretary and general manager of Repco on August 31, 1984.
[118]
While Mackintosh and House of Semiconductors "rented" space (at 119 Labrosse and 84-F Brunswick respectively) from Repco, this was not an ordinary business relationship. The arrangements were oral; rent was not paid on a regular monthly basis; it was paid by an adjustment worked out by Repco's accountants at year end. According to the evidence of Chico Levy, these adjustments took into account amounts owned by Mackintosh and House of Semiconductors for rent, in the case of Mackintosh for secretarial services, telephone lines, etc., and, in the case of House of Semiconductors for components purchased by it from Repco over the course of the year, and in the case of Mackintosh there were, as well, certain credits forthcoming from Repco with respect to equipment sold by Mackintosh to Repco during the year. Cheques at year end were issued to cover the global amounts thus determined by the accountants to be owing.
[119]
In both 1983 and 1984 Repco, under the signature of Nat Levy, undertook to pay for the advertising of House of Semiconductors in, at least, the Montreal Gazette. The advertising agreements with the Gazette for those years are signed by "Nat Levy" as the client, the charges to be billed to Repco; House of Semiconductors is listed as the advertiser. Repco, Nat Levy and Joseph Levy gave guarantees from time to time as required to ensure that House of Semiconductors had sufficient credit to import from Taiwan infringing ROMs and other components or equipment. I would note that this is the only evidence of a personal involvement of Joseph Levy with the infringement activities. It was admitted on examination for discovery that:
"Repco or Joseph Levy or Nat Levy would have given guarantees to permit House of Semiconductors to arrange for that importation and to make those sales ..."
Nat Levy attended at booths at trade shows when Chico could not be there. His evidence in this regard was that he only understood hardware, not software, and that his main purpose in attending such shows was to ensure that the appropriate salespeople were on hand. Nat was called upon by the staff at the Brunswick Boulevard store when Chico was not available - there is at least one occasion when the evidence with respect to such activity is unequivocal.
Liability of the defendants Chico Levy and James Begg
[121]
The claims against the individual defendants, Chico Levy and James Begg, are contested on the grounds that they are not liable in their personal capacity for the acts of the respective corporations with which they were involved (Mackintosh and House of Semiconductors on the one hand and 115778 and 131375 Canada Inc. on the other) on the basis of  <FRAGMENT_SUPPRESSED>  (H.L.). I have no difficulty in finding both individuals personally liable. The personal liability of directors or officers of a company in the case of patent infringement was considered by the Federal Court of Appeal in  <FRAGMENT_SUPPRESSED>  C.P.R.(2d) 164. The court at page 171 quoted 29 Hals., 3rd ed., p. 90, para. 192:
"... The directors of a company are not personally liable for infringements by the company, even if they are managing directors or the sole directors and shareholders, unless either (1) they have formed the company for the purpose of infringing; or (2) they have directly ordered or authorised the acts complained of; or (3) they have so authorised or ordered by implication."
[122]
The court went on at page 172 to indicate that the fact of owning (as shareholder) and being the director of a company was not itself sufficient to warrant an inference that an individual had authorized acts of infringement done by the company. Whether this was so would be a question of fact to be decided on the circumstances of each case. At page 174 it said:
"I do not think we should go so far as to hold that the director or officer must know or have reason to know that the acts which he directs or procures constitute infringement. That would be to impose a condition of liability that does not exist for patent infringement generally. I note such knowledge has been held in the United States not to be material where the question is the personal liability of directors or officers: see Deller's Walker on Patents, 2nd ed. 1972), vol. 7, pp. 117-8. But in my opinion there must be circumstances from which it is reasonable to conclude that the purpose of the director or officer was not the direction of the manufacturing and selling activity of the company in the ordinary course of his relationship to it but the deliberate, wilful and
knowing pursuit of a course of conduct that was likely to constitute infringement or reflected an indifference to the risk of it
. The precise formulation of the appropriate test is obviously a difficult one. Room must be left for a broad appreciation of the circumstances of each case to determine whether as a matter of policy they call for personal liability. Opinions might differ as to the appropriateness of the precise language of the learned trial judge in formulating the test which he adopted - 'deliberately or recklessly embarked on a scheme, using the company as a vehicle, to secure profit or custom which rightfully belonged to the plaintiffs' - but I am unable to conclude that in its essential emphasis it was wrong. ..."
For the application of these principles to a case of trademark infringement see:  <FRAGMENT_SUPPRESSED>  (B.C.C.A.).
[123]
The principles are equally applicable to copyright infringement. I note that it is easy to accidentally or inadvertently infringe a patent; it is not easy to accidentally or inadvertently copy the work of another. This may explain why the Court of Appeal in the Mentmore case found that the individual defendants were not personally liable while the British Columbia Court of Appeal was easily able to so find in the Visa decision.
[124]
It is abundantly clear to me that both Chico Levy and James Begg knowingly pursued a course of action that would constitute infringement. With respect to Mr. Begg, even if I believed his evidence concerning illness and nonparticipation in the day to day business affairs of the company, his actions would still be such as to demonstrate a reckless "indifference as to the risk". But, I think the evidence demonstrates more than indifference. No corroborating evidence was given as to his "illness", no medical evidence, no evidence of family; he did not appear as a witness at trial; only his self-serving statements on the examination for discovery were read in. The documentary evidence (his initials on financial statements, his signature on all cheques, his involvement with the leasing arrangements) all indicate a more intimate involvement with the affairs of the companies than his statements on discovery would attempt to indicate.
[125]
Insofar as copyright infringement is concerned a person infringes by virtue of section 17(1) and section 3, if they "authorize" or purport to authorize the doing of any act which is reserved to the owner of the copyright. "Authorize" has been defined by the jurisprudence as meaning "sanction, approve, and counterance". ( <FRAGMENT_SUPPRESSED>  (Ch.D.), at page 988:
"Indifference exhibited by acts of commission or ommission may reach a degree from which authorization or permission may be inferred. It is a question of fact in each case what is the true inference to be drawn from the conduct of the person. ..."
[126]
There is no doubt that even if I believed that Mr. Begg took a somewhat limited part in the day to day business activities of the Microcom companies his inactivity or indifference would be of such a nature that authorization of or permission to engage in the infringement should be inferred. Certainly there is no doubt that Chico Levy authorized the infringing activities of Mackintosh and House of Semiconductors.
Liability of the Defendants Repco, Nat Levy and Joseph Levy
[127]
What then of the corporate defendant Repco and the individual defendants Nat and Joseph Levy. It is not useful to try to analyse the situation from the point of view of tort law. The Supreme Court stated in  <FRAGMENT_SUPPRESSED>  property law in classification, but is statutory law ... Copyright legislation simply creates rights and obligations upon the terms and in the circumstances set out in the statute ... It does not assist the interpretive analysis to import tort concepts. The legislation speaks for itself and the actions of the appellant must be measured according to the terms of the statute."
[128]
As is obvious from the facts set out above that both Nat and Joseph Levy and the corporate defendant, Repco, through their acts aided and supported Chico, in his infringement activities. According to the evidence Nat played a more vigorous role than Joseph. Counsel for the defendants argued that Nat and Joseph had no actual knowledge of the infringement - they knew their brother was in the computer business, they knew he was selling Apple compatible computers - but it is argued that that does not fix them with knowledge of the copying activity. I am asked to construe the evidence as signifying only that Nat and Joseph Levy gave such help to their younger brother, Chico, in starting his new businesses as any brother would give (eg: shared rental space; non-collection of rent except by means of an "adjustment" at year end; guarantees of credit; placing advertisements because the newspaper would not enter into such contracts with Chico's fledgling businesses until they became established).
[129]
I cannot accept this construction of the evidence. It is simply not tenable in the circumstances of this case to conclude that Nat and Joseph Levy did not have knowledge of the copying activity being carried on. A determination of knowledge is a question of inference from the facts in a given case.  <FRAGMENT_SUPPRESSED>  (N.S.W.S.C.), at page 81;  <FRAGMENT_SUPPRESSED>  (Ont. H.C.), at page 181.;  <FRAGMENT_SUPPRESSED>  contexts means notice of facts such as would suggest to a reasonable man that a breach of the copyright law was being committed - "notice which would put a reasonable man on enquiry" (Albert case supra at page 81). Indeed, I think the defendants, Repco, Joseph and Nat Levy, in the present case had more than merely notice of facts which would lead a reasonable person to think that a breach of copyright law was being committed. My conclusion is that Nat and Joseph Levy and Repco through them knew of the copyright infringement activity. This conclusion is drawn from the fact that the business carried on by the three brothers before Mackintosh and House of Semiconductors were created was in a related field to that for which the two companies were created. Also, Repco was closely linked to the business carried on by Mackintosh and House of Semiconductors once they were created. In addition, there was not only geographical proximity but integration of some of their business activities. Nat Levy personally acted in his brother's stead in the retail outlet and at trade shows; he suggested the name Mackintosh for one of the companies; Repco's business premises, telephone number and secretarial services were also those of Mackintosh. It is simply not credible to believe that there was no knowledge by Nat and Joseph Levy and through them by Repco of the copyright infringement activity.
[130]
Knowledge alone, however, is not enough to make an individual liable for copyright infringement. Can it be said that either the corporate defendant, Repco, or the individual defendants, Joseph or Nat Levy, engaged in activities which bring them within section 3 of the Act as having authorized the reproduction of the plaintiffs' work, or within section 17(4) of the Act. Section 17(4) of the Copyright Act provides:
"(4) Copyright in a work shall also be deemed to be infringed by any person who
(a) sells or lets for hire, or by way of trade exposes or offers for sale or hire;
(b) distributes either for the purposes of trade, or to such an extent as to affect prejudicially the owner of the copyright;
(c) by way of trade exhibits in public; or
(d) imports for sale or hire into Canada;
any work that to his knowledge infringes copyright or would infringe copyright if it had been made within Canada."
[131]
The activities of Nat Levy, and through him those of Repco, clearly bring those two defendants within the terms of section 17(4) of the Copyright Act. Their role as purchasers of the newspaper advertisements for House of Semiconductors in my view constitutes "by way of trade" having "offered for sale" the infringing articles and thus brings them within the proscribed activity of paragraph (a). Also, Nat Levy personally involved himself in various activities, at trade shows and in the retail outlet at Brunswick Avenue. I think his activity in this regard was sufficient to constitute offering goods to the public (paragraph (a)) and exhibiting such by way of trade (paragraph (c)). In addition, I make reference to Mr. Justice Addy's finding in  <FRAGMENT_SUPPRESSED> , at pages 165-7 where it was held that the defendant's activities of aiding and abetting infringement could in certain circumstances be sufficient to constitute infringement itself. I find this principle applicable to this case and the activities of Chico Levy and Repco fall within it.
[132]
I do not think, however, that there is enough evidence to allow me to conclude that Joseph Levy's activities, in his personal capacity bring him within section 17(4). The only evidence concerning his involvement personally is that he gave guarantees of credit for the importation of infringing ROMs, with knowledge that his brother was carrying on an infringing activity. I do not think this falls within any of the sections of 17(4) nor within section 3 of the Act as authorizing the production or reproduction of the plaintiffs' program. I think it would do violence to the language of the Statute to find that Joseph Levy "authorized" the infringing activities defined in section 3 by merely guaranteeing credits to enable that activity to take place. I adopt the reasoning found at page 984 of the Ames decision, supra, para. [125]:
"Any ordinary person would I think assume that an authorization can only come from somebody having
or purporting to have authority
and that an act is not authorized by somebody who merely enables or possibly assists or even encourages another to do that act, but does not purport to have any authority which he can grant to justify the doing of the act."
Accordingly, the action as against Joseph Levy will be dismissed.
Comments on the Evidence
[133]
I am mindful of the fact that it is quite likely that a higher court than this will soon be seized of this case. Accordingly, I would indicate that I have relied heavily on the initial evidence of Professor Graham and on the evidence of Professor Burkowski. Most of the "rebuttal" evidence I did not find helpful. I use the word "rebuttal" with some reservation since the evidence offered under that rubric was somewhat more extensive than appropriately should be led in that context. In any event, I have not relied on the rebuttal evidence to any great extent. In particular, I found it almost incredulous that the plaintiffs' "hardware" expert refused to express himself except in software terms. Also, the "table of abstractions" by reference to which I was encouraged to accept the proposition that it was inappropriate to talk of programs and circuitry or voltage levels in the same sentence was not convincing.
The plaintiffs seek injunctions restraining the defendants and their respective servants and agents from importing, selling and distributing computers and computer components under the name Mackintosh or Microcom or otherwise which contain a copy or substantial copy of the literary works "AUTOSTART ROM" or APPLESOFT"; an accounting of all profits made by the defendants as a result of the sale of computers and components which infringe the said copyrights of Apple Computer; and delivery up to the plaintiffs of all copies of computers and computer components in the possession of any of the defendants which contain a copy or substantial copy of the said copyrights.
[135]
The defendants argue that both the claim for an accounting as to profits and for delivery up of all computers and computer components which contain a copy of the programs is too broad. I accept that argument with respect to the delivery up of the computers and computer components. The ROM chips are easily removable. I do not see that there is any justification for the delivery to the plaintiffs of the other computer parts: the keyboard; the casings; the circuit boards etc. An order will issue requiring delivery up only of the devices containing the program, all copies of the program and all devices containing copies.
[136]
With respect to the accounting as to profits I do not consider the claim too broad. It is clear that the profit made by selling the "Apple compatible" computers derived principally from the fact that the plaintiffs' program was contained therein. There is nothing to make me think that the computers without the ROM chips could have been sold for more than the cost price paid by the defendants for the component parts. In my view, the profit arising from the sale of the computers as a whole derived mainly from the fact that they were "Apple-compatible" and inclusive of the copied programs therein. In addition, I do not see that the profit derived from the sales can be somehow or other divided as between that attributable to the chips and that arising from the other components of the computer. Accordingly, an accounting of profits as requested by the plaintiffs is appropriate.
[137]
Counsel for the plaintiffs asked that argument as to costs be deferred until after judgment was rendered. Thus, I make no order in that regard except with respect to those defendants against whom action was discontinued by the plaintiffs.
Action allowed.
Editor: Elizabeth M.A. Turgeon/kam
[End of document]